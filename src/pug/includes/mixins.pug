//- Generate pairs of inputs and labels

//- 'inputs' is list of objects which contains labels and attributes of inputs.
//- Array example 'myForm' there is in vars.pug.

//- 'inputClass' is string with CSS classes for inputs.

//- 'labelClass' is CSS classes for labels.

//- 'groupClass' is CSS classes for paragraph which unite label and input.

//- Usage example:
	form(action="#")
		+formInputs(myForm)
		button Submit

mixin formInputs(inputs, inputClass = "input input--common", labelClass = "mV-vh", groupClass = "")
	- for(var i = 0; i < inputs.length; i++)
		p(class=groupClass)
			label(class=labelClass for=inputs[i].input.id)= inputs[i].label || inputs[i].input.placeholder
			input(class=inputClass)&attributes(inputs[i].input)

//- Generate map of site. Map is divided into sections. Section
//- contains subtitle and list of links to site pages.

//- 'mapData' is list of objects which contains section title and list of links.
//- Array example 'siteMapData' there is in vars.pug.

//- 'sectionClass' is string with CSS classes for map sections.

//- The remaining parameters are just the classes strings for the corresponding elements.

//- Usage example:
	h2.mV-vh Site map
	+siteMap(siteMapData, "row__col W2gc_sm W4gc_md", "", "mAll-sr")

mixin siteMap(mapData, sectionClass = "", sectionTitleClass = "", listClass = "", itemClass = "", linkClass = "")
	- for(i = 0; i < mapData.length; i++)
		div(class=sectionClass)
			h3(class=sectionTitleClass)= mapData[i].title
			ul(class=listClass)
				- for(j = 0; j < mapData[i].list.length; j++)
					li(class=itemClass)
						a(class=linkClass href=mapData[i].list[j].link)= mapData[i].list[j].label
